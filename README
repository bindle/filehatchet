
File Hatchet
============

   File Hatchet is a utility for splitting a large file into multiple smaller
   "chip" files for distribution. The chip files use the file format .B2S
   (Big To Small).  Planned features for File Hatchet include the ability to
   verify data integrity of both the "chips" and the restored orignal file;
   the ability to incrementally rebuild the original file from the chips; the
   ability to regenerate any one chip from the original file; and the ability
   to repair the corrupted segments of the orignal file using the chips.


Contents
--------

   1. Disclaimer
   2. Software Requirements
   3. File Format .B2S Version 1
   4. Maintainers
   5. Community
   6. Source Code
   7. Package Maintence Notes


Disclaimer
==========

   This software is provided by the copyright holders and contributors "as
   is" and any express or implied warranties, including, but not limited to,
   the implied warranties of merchantability and fitness for a particular
   purpose are disclaimed. In no event shall Bindle Binaries be liable for
   any direct, indirect, incidental, special, exemplary, or consequential
   damages (including, but not limited to, procurement of substitute goods or
   services; loss of use, data, or profits; or business interruption) however
   caused and on any theory of liability, whether in contract, strict
   liability, or tort (including negligence or otherwise) arising in any way
   out of the use of this software, even if advised of the possibility of
   such damage.


Software Requirements
=====================

   Git 1.7.2.3
   GNU Autoconf 2.68
   GNU Automake 1.11.1
   GNU Libtool 2.4
   GCC 4.2.1
   OpenSSL 1.0.0c
   XZ Utils 5.0.0


File Format .B2S Version 1
==========================

   This is a brief outline/byte map of the .B2S file format.  Please refer
   to the documentation for the .B2S file format for a comprehensive
   explanation of the format.

   /* XDR Description of .B2S file Format */

   const FILEHATCHET_MAGIC_ID      0x42325300 /* "B2S" */

   const FILEHATCHET_OPT_UNICODE    0x01
   const FILEHATCHET_OPT_LZMA       0x02
   const FILEHATCHET_OPT_SHA1DIGEST 0x04
   const FILEHATCHET_OPT_SHA1ID     0x08

   struct {
      unsigned hyper   offset;
      opaque           data<>;
      opaque           digest[20];
   } b2sChunk;

   struct {
      unsigned int     magicID;          /* offset: 0x00 */
      unsigned int     versionCurrent;   /* offset: 0x04 */
      unsigned int     versionAge;       /* offset: 0x08 */
      unsigned hyper   flags;            /* offset: 0x0C */
      opaque           origID[20];       /* offset: 0x14 */
      unsigned hyper   origSize;         /* offset: 0x28 */
      unsigned hyper   origNumOfChips;   /* offset: 0x30 */
      unsigned hyper   origMaxChipSize;  /* offset: 0x38 */
      unsigned hyper   origMaxChunkSize; /* offset: 0x40 */
      hyper            contentIndex;     /* offset: 0x48 */
      unsigned hyper   contentOffset;    /* offset: 0x50 */
      unsigned hyper   contentSize;      /* offset: 0x58 */
      opaque           origFileName<>;   /* offset: 0x60 */
      struct b2sChunk  content<>;        /* offset:      */
      opaque           digest[20];       /* offset:      */
   } b2sFile;

   /* end of XDR description */

   Chip with content index of zero is used as an index file and will not
   contain content from the original file, but can be used to regenerate a
   specific chip from the original file, to generate a custom chip from the
   original file, to validate the recreated original file, and to identify
   corrupt segments of the original file.

   Chip with content index of negative one indicates that the content is not
   from of a series of chips, but of a custom chip size and offset.


Maintainers
===========

   David M. Syzdek
   Bindle Binaries
   syzdek@bindlebinaries.com


Source Code
===========

   The source code for this project is maintained using git
   (http://git-scm.com).  The following contains information to checkout the
   source code from the git repository.

   Git URLs:
      git://github.com/bindle/filehatchet.git
      git://git.scm.bindlebinaries.com/pub/scm/com.bindlebinaries/filehatchet.git
      http://http.scm.bindlebinaries.com/pub/scm/com.bindlebinaries/filehatchet.git
      ssh://ssh.scm.bindlebinaries.com/pub/scm/com.bindlebinaries/filehatchet.git

   Downloading Source:

      $ git clone git://github.com/bindle/filehatchet.git

   Preparing Source:

      $ cd filehatchet
      $ autoreconf -i -f -I m4

   Git Branches:
      master - Current release of packages.
      next   - changes staged for next release
      pu     - proposed updates for next release
      xx/yy+ - branch for testing new changes before merging to 'pu' branch


Package Maintence Notes
=======================

   This is a collection of notes for developers to use when maintaining this
   package.

   New Release Checklist:

      - Switch to 'master' branch in Git repository.
      - Update version in configure.ac.
      - Update date and version in ChangeLog.
      - Commit configure.ac and ChangeLog changes to repository.
      - Create tag in git repository:
           $ git tag -s v${MAJOR}.${MINOR}
      - Push repository to publishing server:
           $ git push --tags origin master:master next:next pu:pu

   Creating Source Distribution Archives:

      $ ./configure
      $ make autoreconf
      $ make distcheck
      $ make dist-bzip2
